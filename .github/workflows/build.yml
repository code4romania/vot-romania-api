on:
  push:
    branches: [master]

name: Deploy

env:
  IMAGE_VOT_ROMANIA: code4romania/vot-romania

jobs:
  build-dockerimage:
    name: Build Docker container
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-central-1
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_HUB_USERNAME }}
      #     password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # - name: Build and push
      #   id: docker_build
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: ./src
      #     builder: ${{ steps.buildx.outputs.name }}
      #     push: true
      #     tags: ${{ secrets.DOCKER_HUB_USERNAME }}/vot-romania:latest
      #     cache-from: type=local,src=/tmp/.buildx-cache
      #     cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Replace image tag in template
        run: sed -e 's,<IMAGE_TAG_HERE>,'$GITHUB_SHA',g' ./k8s-deploy/service.yaml

      # - name: aws check
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-region: eu-central-1
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Deploy
      #   uses: actions-hub/kubectl@v1.21.2
      #   env:
      #     KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      # - run: kubectl apply -f ./k8s-deploy/service.yaml

      - name: Deployment
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG }}
        with:
          args: apply -f ./k8s-deploy/service.yaml
